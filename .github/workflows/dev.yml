name: dev workflow

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, main, release ]
  pull_request:
    branches: [ master, main, release ]

  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
#        python-version: [3.7, 3.8, 3.9]
        python-version: [3.9]
        os: [ubuntu-18.04]
#        os: [ubuntu-18.04, macos-latest, windows-latest]
        include:
          - python-version: 3.9
            os: ubuntu-18.04
            publish-results: true
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry tox tox-gh-actions pylint_junit
          poetry install

      - name: test with tox
        run:
          poetry run tox

      - name: Pylint
        run:
          poetry run pylint --output-format=pylint_junit.JUnitReporter -r y  dframeio tests | tee .pylint.json
          #poetry run pylint --output-format=colorized -r y  dframeio tests
#      - uses: cclauss/GitHub-Action-for-pylint@0.7.0
#      - run: pip install -r requirements.txt ; pylint **/*.py

      - name: list files
        if: ${{ always() }}
        run: ls -l .

      - name: Publish Test Results
        if: ${{ matrix.python-version && always() }}
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        with:
          files: |
            pytest.xml
            .pylint.json

      - uses: codecov/codecov-action@v1
        if: ${{ matrix.python-version && always() }}
        with:
          fail_ci_if_error: true
          files: coverage.xml

  publish_dev_build:
    # if test failed, we should not publish
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: list files
        run: ls -l .

      - name: Build wheels and source tarball
        run: |
          poetry version $(poetry version --short)-dev.$GITHUB_RUN_NUMBER
          poetry version --short
          poetry build

      - name: publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN}}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true
